apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

generatorOptions:
  disableNameSuffixHash: true

secretGenerator:
  - name: mysql-admin
    literals:
      - mysql-root-password=root
      - mysql-password=${name}
  - name: redis-admin
    literals:
      - redis-root-password=root
  - name: kafka-admin
    literals:
      - kafka-root-password=root
  - name: ${name}-mysql-database
    literals:
      - public_database_host=mysql
      - public_database_port=3306
      - public_database_name=${name}
      - public_database_user=${name}
      - public_database_password=${name}
  - name: ${name}-redis-cache
    literals:
      - public_cache_host=redis-master
      - public_cache_port=6379
      - public_cache_password=root
      - public_cache_username=default
  - name: ${name}-kafka-broker
    literals:
      - public_broker_servers=kafka:9092
      - public_broker_password=root
      - public_broker_topics=
  - name: ${name}-redis-memdb
    literals:
      - public_memdb_host=redis-master
      - public_memdb_port=6379
      - public_memdb_username=default
      - public_memdb_password=root

helmCharts:
  - name: mysql
    repo: https://charts.bitnami.com/bitnami
    includeCRDs: false
    releaseName: mysql
    version: 9.4.1
    valuesInline:
      image:
        tag: 8.0.30
      architecture: standalone
      auth:
        createDatabase: true
        database: ${name}
        username: ${name}
        existingSecret: mysql-admin
      primary:
        persistence:
          enabled: false
  - name: redis
    repo: https://charts.bitnami.com/bitnami
    includeCRDs: false
    releaseName: redis
    version: 17.3.5
    valuesInline:
      image:
        tag: 6.2
      architecture: standalone
      auth:
        enabled: true
        sentinel: false
        existingSecret: redis-admin
        existingSecretPasswordKey: redis-root-password
      master:
        persistence:
          enabled: false
  - name: kafka
    repo: https://charts.bitnami.com/bitnami
    includeCRDs: false
    releaseName: kafka
    version: 20.0.1
    valuesInline:
      image:
        tag: 3.3.1-debian-11-r22
      deleteTopicEnable: true
      autoCreateTopicsEnable: true
      superUsers: User:root
      auth:
        clientProtocol: plaintext
      persistence:
        enabled: false
      zookeeperConnectionTimeoutMs: 30000
      zookeeper:
        enabled: true
        persistence:
          enabled: false
        replicaCount: 1

resources:
  - ../base

patchesStrategicMerge:
  - |-
    apiVersion: autoscaling/v2beta1
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${name}
    \$patch: delete

patches:
  - patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/args
        value: ["local"]
    target:
      kind: Deployment
